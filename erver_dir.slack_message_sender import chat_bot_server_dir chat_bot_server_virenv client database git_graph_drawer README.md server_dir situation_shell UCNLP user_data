[1mdiff --git a/README.md b/README.md[m
[1mindex e14e9f7..83166a6 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,26 +1,17 @@[m
[31m-Direct conflict[m
[32m+[m[32mConflict Detector[m
 ---------------[m
[31m-- Class user_git_diff[m
[31m-[m
[31m-  - variable : content, proj_name, user_name[m
[31m-  - function[m
[31m-    - get_proj_name : return project name[m
[31m-    - get_user_name : return user name[m
[31m-    - get_working_data : return working data[m
[31m-[m
[31m-- Class work_database[m
[31m-  - function[m
[31m-    - **detect_direct_conflict** : detect direct conflict (input : project name, working list, user name)[m
[31m-    - **delete_user_data** : delete past user data from working table (input : user name)[m
[31m-    - **search_working_table** : search user's project name and file name in working table (input : project name, file list / output : working table row)[m
[31m-    - **search_already_conflict_table** : check if current conflict has already occurred from working table (input : project name, conflict file list, user's working file list, user name / output : working table row about already occurred conflict )[m
[31m-    - **search_best_conflict** : search the best value of severity in current (input : project name, conflict file list, user's working file list, user name / output : severity list including severity level and logic name per files)[m
[31m-    - **compare_current_conflict_and_db_conflict** : compare current conflict and database conflict and send direct messages to users (input : already conflict list, severity list including severity level and logic name per files)[m
[31m-    - **update_first_best_conflict_list** : update conflict list with best severity conflict when conflict occurs first time(input : severity list including severity level and logic name per files)[m
[31m-    - **non_conflict_logic** : if there is no conflict, delete user data from working table (input : project name, user name)[m
[31m-    - **insert_user_data** : insert user data to working table (input : project name, working list, user name)[m
[31m-    - **update_conflict_data** : update conflict information to working table after compares current conflict to conflict in the working table (input : project name, file name, user1 logic name, user2 logic name, user1 name, user2 name, severity)[m
[31m-    - **increase_alert_count** : increase 1 alert count in working table each time you give a notification (input : project name, file name, user1 logic name, user2 logic name, user1 name, user2 name)[m
[31m-    - **insert_conflict_data** : save conflict data in the database when the first conflict occurs. (input : project name, file name, user1 logic name, user2 logic name, user1 name, user2 name, severity)[m
[31m-    - **delete_conflict_list** : remove conflict information from the conflict list, if 24 hours have elapsed and the alarm is more than 2 times[m
[31m-    - **close_db** : close database[m
[32m+[m[32m1. Conflict[m
[32m+[m[41m    [m
[32m+[m[32m     - Definition of conflict[m
[32m+[m[32m        - Definition of direct conflict[m
[32m+[m[32m        > 다이렉트 컨플릭트란 두명의 사용자(프로그래머)가 깃허브에 저장된 프로젝트의 파일 중에서 같은 파일과 같은 코드 부분을 수정할 때 발생하는 컨플릭트를 말한다.[m[41m [m
[32m+[m[32m        - Definition of indirect conflict[m
[32m+[m[32m        > 인다이렉트 컨플릭트란 두명의 사용자(프로그래머)가 깃허브에 저장된 프로젝트의 파일 중에서 디펜던시를 갖는 파일을 서로 수정할 때 발생하는 컨플릭트를 말한다. 디펜던시를 갖는 파일이란 한 파일에서 다른 파일의 모듈을 import 할 때 두개의 파일 사이에서 생기는 관계를 말한다.[m
[32m+[m[41m    [m
[32m+[m[32m    - How to detect conflict[m
[32m+[m[32m        - Analyze the information of git-diff[m
[32m+[m[32m        >[m[41m [m
[32m+[m[41m        [m
[32m+[m[32m        - Process the information of git-diff[m
[32m+[m[32m        - Detect direct conflict[m
[32m+[m[32m        - Detect indirect conflict[m
\ No newline at end of file[m
[1mdiff --git a/server_dir/direct_work_database.py b/server_dir/direct_work_database.py[m
[1mindex 07686b7..ff16809 100644[m
[1m--- a/server_dir/direct_work_database.py[m
[1m+++ b/server_dir/direct_work_database.py[m
[36m@@ -3,7 +3,7 @@[m [mimport datetime as d[m
 from server_dir.slack_message_sender import *[m
 from server_dir.conflict_flag_enum import Conflict_flag[m
 [m
[31m-class work_database:[m
[32m+[m[32mclass direct_work_database:[m
 [m
     # Constructor[m
     def __init__(self):[m
[36m@@ -37,7 +37,7 @@[m [mclass work_database:[m
 [m
     # Detect Direct Conflict[m
     def detect_direct_conflict(self, project_name, working_list, user_name):[m
[31m-        self.delete_conflict_list()[m
[32m+[m[32m        self.delete_direct_conflict_list()[m
 [m
         file_conflict_list = self.search_working_table(project_name, working_list)[m
 [m
[36m@@ -46,7 +46,7 @@[m [mclass work_database:[m
 [m
             print("\n#### Direct Conflict !!! ####")[m
 [m
[31m-            already_conflict_list = self.search_already_conflict_table(project_name, file_conflict_list, working_list, user_name)[m
[32m+[m[32m            already_conflict_list = self.search_already_direct_conflict_table(project_name, file_conflict_list, working_list, user_name)[m
 [m
             # Already conflicted[m
             if(already_conflict_list != []):[m
[36m@@ -79,10 +79,10 @@[m [mclass work_database:[m
 [m
 [m
     # Delete conflict list[m
[31m-    def delete_conflict_list(self):[m
[32m+[m[32m    def delete_direct_conflict_list(self):[m
         try:[m
             sql = "delete " \[m
[31m-                  "from conflict_table " \[m
[32m+[m[32m                  "from direct_conflict_table " \[m
                   "where alert_count >= 2 " \[m
                   "and TIMEDIFF(now(),log_time) > 24"[m
             print(sql)[m
[36m@@ -127,7 +127,7 @@[m [mclass work_database:[m
         return all_row_list[m
 [m
 [m
[31m-    def search_already_conflict_table(self, project_name, conflict_list, working_list, user_name):[m
[32m+[m[32m    def search_already_direct_conflict_table(self, project_name, conflict_list, working_list, user_name):[m
         all_row_list = list()[m
 [m
         # [ project_name, file_name, logic_name, user_name, work_line, work_amount, log_time][m
[36m@@ -138,7 +138,7 @@[m [mclass work_database:[m
                 raw_list = list()[m
                 try:[m
                     sql = "select * " \[m
[31m-                          "from conflict_table " \[m
[32m+[m[32m                          "from direct_conflict_table " \[m
                           "where project_name = '%s' " \[m
                           "and file_name = '%s' " \[m
                           "and user1_name = '%s' " \[m
[36m@@ -345,7 +345,7 @@[m [mclass work_database:[m
         raw_list_temp = list()[m
         try:[m
             sql = "select * " \[m
[31m-                  "from conflict_table " \[m
[32m+[m[32m                  "from direct_conflict_table " \[m
                   "where project_name = '%s' " \[m
                   "and (user1_name = '%s' or user2_name = '%s') " % (project_name, user_name, user_name)[m
             print(sql)[m
[36m@@ -377,7 +377,7 @@[m [mclass work_database:[m
 [m
         try:[m
             sql = "delete " \[m
[31m-                  "from conflict_table " \[m
[32m+[m[32m                  "from direct_conflict_table " \[m
                   "where project_name = '%s' " \[m
                   "and (user1_name = '%s' or user2_name = '%s') " % (project_name, user_name, user_name)[m
             print(sql)[m
[36m@@ -408,7 +408,7 @@[m [mclass work_database:[m
     # Insert conflict data[m
     def insert_conflict_data(self, project_name, file_name, logic1_name, logic2_name, user1_name, user2_name, severity):[m
         try:[m
[31m-            sql1 = "insert into conflict_table (project_name, file_name, logic1_name, logic2_name, user1_name, user2_name, severity) " \[m
[32m+[m[32m            sql1 = "insert into direct_conflict_table (project_name, file_name, logic1_name, logic2_name, user1_name, user2_name, severity) " \[m
                    "value ('%s', '%s', '%s', '%s', '%s', '%s', %d)" % (project_name, file_name, logic1_name, logic2_name, user1_name, user2_name, severity)[m
             self.cursor.execute(sql1)[m
             self.conn.commit()[m
[36m@@ -422,7 +422,7 @@[m [mclass work_database:[m
     # update conflict data[m
     def update_conflict_data(self, project_name, file_name, logic1_name, logic2_name, user1_name, user2_name, severity):[m
         try:[m
[31m-            sql = "update conflict_table " \[m
[32m+[m[32m            sql = "update direct_conflict_table " \[m
                   "set logic1_name = '%s', logic2_name = '%s', severity = %d " \[m
                   "where project_name = '%s' " \[m
                   "and file_name = '%s' " \[m
[36m@@ -435,13 +435,13 @@[m [mclass work_database:[m
 [m
         except:[m
             self.conn.rollback()[m
[31m-            print("ERROR : update direct conflict_table")[m
[32m+[m[32m            print("ERROR : update direct direct_conflict_table")[m
         return[m
     [m
 [m
     def increase_alert_count(self, project_name, file_name, logic1_name, logic2_name, user1_name, user2_name):[m
         try:[m
[31m-            sql = "update conflict_table " \[m
[32m+[m[32m            sql = "update direct_conflict_table " \[m
                   "set alert_count = alert_count + 1 " \[m
                   "where project_name = '%s' " \[m
                   "and file_name = '%s' " \[m
[1mdiff --git a/server_dir/server_git.py b/server_dir/server_git.py[m
[1mindex 69a96c4..3c1877b 100644[m
[1m--- a/server_dir/server_git.py[m
[1m+++ b/server_dir/server_git.py[m
[36m@@ -23,7 +23,7 @@[m [mdef git_diff_logic(content):[m
     user_data = user_git_diff(content)[m
 [m
     # Create direct and indirect database connection[m
[31m-    w_db = work_database()[m
[32m+[m[32m    w_db = direct_work_database()[m
     iw_db = indirect_work_database()[m
 [m
     # Delete current user data[m
[36m@@ -50,8 +50,6 @@[m [mdef git_diff_logic(content):[m
     return[m
 [m
 [m
[31m-[m
[31m-[m
 def convert_data(content) :[m
 [m
     converted_data = dict()[m
